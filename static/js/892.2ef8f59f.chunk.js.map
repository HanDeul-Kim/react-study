{"version":3,"file":"static/js/892.2ef8f59f.chunk.js","mappings":"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","sources":["pages/Detail.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addProduct } from '../store/cartSlice.js'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nfunction Detail(props) {\r\n    let { id } = useParams()\r\n    let findProduct = props.itemAll.find((x) => { return x.id == id })\r\n    let [hidden, setHidden] = useState('');\r\n    let state = useSelector((state) => state)\r\n    useEffect(() => {\r\n        setHidden('active')\r\n        return () => {\r\n            setHidden('');\r\n        }\r\n    }, [])\r\n    let [tab, setTab] = useState(0);\r\n    \r\n    // store state\r\n    let dispatch = useDispatch()\r\n    // sweetalert2 라이브러리\r\n    const MySwal = withReactContent(Swal)\r\n    // 봤던 상품 id값 저장\r\n    useEffect(() => {\r\n        let viewId = localStorage.getItem('watchedId');\r\n        viewId = JSON.parse(viewId);\r\n        viewId.push(findProduct.id);\r\n        viewId = new Set(viewId);\r\n        viewId = Array.from(viewId);\r\n        // if(!viewId.includes(findProduct.id)) {  \r\n        //     viewId.push(findProduct.id);\r\n        // }\r\n        localStorage.setItem('watchedId', JSON.stringify(viewId));\r\n    }, [])\r\n    // 봤던 상품 이미지 num 저장 \r\n    useEffect( () => {\r\n        localStorage.setItem('itemImage', id)\r\n    }, [])\r\n    \r\n    return (\r\n        <div className={`container detail-c ${hidden}`}>\r\n            <div className=\"row\" style={{display:'flex'}}>\r\n                <div className=\"col-md-6\" style={{display:'flex', justifyContent:'center'}}>\r\n                    <img src={`../img/product_${Number(id)}.jpg`} width=\"50%\" alt=\"detail_page_product_img\"/>\r\n                </div>\r\n                <div className=\"col-md-6\" style={{display:'flex', flexDirection:'column', justifyContent:'center', alignItems:'center'}}>\r\n                    <h4 className=\"pt-5\">{findProduct.title}</h4>\r\n                    <p className='desc_p'>{findProduct.content}</p>\r\n                    <p>{findProduct.price}</p>\r\n                    <button className=\"btn btn-danger\" onClick={ () => {\r\n                        dispatch(addProduct( {id : props.itemAll[id].id, name : props.itemAll[id].title, count : 1} ))\r\n                        MySwal.fire({\r\n                            title: <strong>장바구니에 담았습니다.</strong>,\r\n                            html: '',\r\n                            icon: 'success',\r\n                            timer: 1000,\r\n                            confirmButtonText: ''\r\n                        })\r\n                        state.cart.filter( (i) => {\r\n                            if(i.id === findProduct.id){\r\n                                MySwal.fire({\r\n                                    title: <strong>장바구니에 이미 있습니다.</strong>,\r\n                                    html: '',\r\n                                    icon: 'warning',\r\n                                    timer: 1000,\r\n                                    confirmButtonText: ''\r\n                                })\r\n                            }\r\n                        })\r\n                    }\r\n                    }>장바구니에 추가</button>\r\n                </div>\r\n            </div>\r\n            <Nav justify variant=\"tabs\" defaultActiveKey=\"link0\">\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link0\" onClick={() => { setTab(0) }}>상세 정보</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link1\" onClick={() => { setTab(1) }}>후기</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link2\" onClick={() => { setTab(2) }}>Q&#38;A</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n            <TabContent tab={tab} />\r\n        </div>\r\n    )\r\n   \r\n}\r\nfunction TabContent({tab}) {\r\n    let [hidden, setHidden] = useState('')\r\n    useEffect( () => {\r\n        // react 18 버전 이후로 나온 새 기능인 automatic batching의 이유로 시간차를 두어야 useEffect가 clean-up함수 이후 정상적으로 작동.\r\n        let a = setTimeout(() => {\r\n            setHidden('active')\r\n        }, 100);\r\n        return () => {\r\n            clearTimeout(a);\r\n            setHidden('');\r\n        }\r\n    }, [tab])\r\n    return (\r\n        <div className={`content-inner ${hidden}`}>{[<div>상세 정보</div>, <div>후기</div>, <div>Q&#38;A</div>][tab]}</div>\r\n    )\r\n}\r\n\r\nexport default Detail;"],"names":["TabContent","tab","useState","hidden","setHidden","useEffect","a","setTimeout","clearTimeout","className","props","id","useParams","findProduct","itemAll","find","x","state","useSelector","setTab","dispatch","useDispatch","MySwal","withReactContent","Swal","viewId","localStorage","getItem","JSON","parse","push","Set","Array","from","setItem","stringify","style","display","justifyContent","src","Number","width","alt","flexDirection","alignItems","title","content","price","onClick","addProduct","name","count","fire","html","icon","timer","confirmButtonText","cart","filter","i","justify","variant","defaultActiveKey","eventKey"],"sourceRoot":""}